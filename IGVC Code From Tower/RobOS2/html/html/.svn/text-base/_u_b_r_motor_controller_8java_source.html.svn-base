<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>RobOS2: src/robOS2/hardware/ubr/UBRMotorController.java Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript">
$(document).ready(initResizable);
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.7.4 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">RobOS2&#160;<span id="projectnumber">0.0.2</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.html"><span>Packages</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li id="searchli">
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('_u_b_r_motor_controller_8java.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">src/robOS2/hardware/ubr/UBRMotorController.java</div>  </div>
</div>
<div class="contents">
<a href="_u_b_r_motor_controller_8java.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="keyword">package </span>robOS2.hardware.ubr;
<a name="l00002"></a>00002 
<a name="l00003"></a>00003 <span class="keyword">import</span> org.apache.log4j.Logger;
<a name="l00004"></a>00004 <span class="keyword">import</span> robOS2.hardware.interfaces.drivers.IMechWheel;
<a name="l00005"></a>00005 <span class="keyword">import</span> robOS2.hardware.interfaces.listeners.IFourMotorInterface;
<a name="l00006"></a>00006 <span class="keyword">import</span> robOS2.hardware.interfaces.listeners.IFourMotorListener;
<a name="l00007"></a>00007 <span class="keyword">import</span> robOS2.hardware.interfaces.marker.IUniversalHardwareDevice;
<a name="l00008"></a>00008 <span class="keyword">import</span> robOS2.serial.Connection;
<a name="l00009"></a>00009 
<a name="l00010"></a><a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html">00010</a> <span class="keyword">public</span> <span class="keyword">class </span><a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html">UBRMotorController</a> <span class="keyword">implements</span> <a class="code" href="interfacerob_o_s2_1_1hardware_1_1interfaces_1_1listeners_1_1_i_four_motor_interface.html">IFourMotorInterface</a>, <a class="code" href="interfacerob_o_s2_1_1hardware_1_1interfaces_1_1marker_1_1_i_universal_hardware_device.html">IUniversalHardwareDevice</a>, <a class="code" href="interfacerob_o_s2_1_1hardware_1_1interfaces_1_1drivers_1_1_i_mech_wheel.html">IMechWheel</a>{
<a name="l00011"></a><a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#aa21ac20410d49cc6785cfb0bb860c56e">00011</a>         <span class="keyword">private</span> <a class="code" href="classrob_o_s2_1_1serial_1_1_connection.html">Connection</a> <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#aa21ac20410d49cc6785cfb0bb860c56e">_serialConnection</a>;
<a name="l00012"></a><a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#af8e67a4d4db3c5a75756496299dfd7d9">00012</a>         <span class="keyword">static</span> Logger <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#af8e67a4d4db3c5a75756496299dfd7d9">log</a> = Logger.getLogger(<a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html">UBRMotorController</a>.class.getName());
<a name="l00013"></a><a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#ae5120436c87a1e689b05f72232e59714">00013</a>         <span class="keyword">private</span> <a class="code" href="interfacerob_o_s2_1_1hardware_1_1interfaces_1_1listeners_1_1_i_four_motor_listener.html">IFourMotorListener</a> <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#ae5120436c87a1e689b05f72232e59714">_listener</a>;
<a name="l00014"></a>00014         
<a name="l00015"></a><a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#ad5ccd4646c65fedde35212ad0603f376">00015</a>         <span class="keyword">public</span> <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#ad5ccd4646c65fedde35212ad0603f376">UBRMotorController</a>(<a class="code" href="classrob_o_s2_1_1serial_1_1_connection.html">Connection</a> conn) {
<a name="l00016"></a>00016                 <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#aa21ac20410d49cc6785cfb0bb860c56e">_serialConnection</a> = conn;
<a name="l00017"></a>00017                 <span class="keywordflow">try</span> {
<a name="l00018"></a>00018                         <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#ae5120436c87a1e689b05f72232e59714">_listener</a> = <span class="keyword">new</span> <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller_listener.html">UBRMotorControllerListener</a>(<a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#aa21ac20410d49cc6785cfb0bb860c56e">_serialConnection</a>.<a class="code" href="classrob_o_s2_1_1serial_1_1_connection.html#ac94c4047d9e1805dda66d82c3a3f7f9a">getInputStream</a>());
<a name="l00019"></a>00019                         <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#aa21ac20410d49cc6785cfb0bb860c56e">_serialConnection</a>.<a class="code" href="classrob_o_s2_1_1serial_1_1_connection.html#a065da80bb9b8f67d6ce01f4d4a03869d">attachListener</a>(<a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#ae5120436c87a1e689b05f72232e59714">_listener</a>);
<a name="l00020"></a>00020                 } <span class="keywordflow">catch</span> (Exception e) {
<a name="l00021"></a>00021                         <span class="comment">// The first connection attempt to the motor controller failed.</span>
<a name="l00022"></a>00022                         <span class="comment">// We are going to try waiting a half second (500 miiliseconds) and then</span>
<a name="l00023"></a>00023                         <span class="comment">// going to attempt a re-connect.</span>
<a name="l00024"></a>00024                         <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#af8e67a4d4db3c5a75756496299dfd7d9">log</a>.error(<span class="stringliteral">&quot;First connection attempt to the motor controller has failed.&quot;</span> +
<a name="l00025"></a>00025                                           <span class="stringliteral">&quot; A reconnect will be attempted in a half a second.&quot;</span>);
<a name="l00026"></a>00026                         <span class="keywordflow">try</span> {
<a name="l00027"></a>00027                                 Thread.sleep(500);
<a name="l00028"></a>00028                         } <span class="keywordflow">catch</span> (InterruptedException e1) {
<a name="l00029"></a>00029                                 <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#af8e67a4d4db3c5a75756496299dfd7d9">log</a>.fatal(<span class="stringliteral">&quot;Thread can&#39;t sleep. Motor controller reconnect probably won&#39;t work.&quot;</span>);
<a name="l00030"></a>00030                         }
<a name="l00031"></a>00031 <span class="comment">//                      _serialConnection = new Connection(&quot;Motor Driver&quot;);</span>
<a name="l00032"></a>00032                         <span class="keywordflow">try</span> {
<a name="l00033"></a>00033 <span class="comment">//                              _serialConnection.connectEvenParity(port, 7, 57600);</span>
<a name="l00034"></a>00034                         } <span class="keywordflow">catch</span> (Exception e1) {
<a name="l00035"></a>00035                                 <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#af8e67a4d4db3c5a75756496299dfd7d9">log</a>.fatal(<span class="stringliteral">&quot;Can not connect to the motor controller!&quot;</span>);
<a name="l00036"></a>00036                         }
<a name="l00037"></a>00037                 }
<a name="l00038"></a>00038         }
<a name="l00039"></a>00039 <span class="comment"></span>
<a name="l00040"></a>00040 <span class="comment">        /**</span>
<a name="l00041"></a>00041 <span class="comment">         * Method to update the speed of the left front motor ONLY!</span>
<a name="l00042"></a>00042 <span class="comment">         * The synthax of the motor controller is:</span>
<a name="l00043"></a>00043 <span class="comment">         * !M1&lt;speed&gt; for forward speed</span>
<a name="l00044"></a>00044 <span class="comment">         * !m1&lt;speed&gt; for reverse speed</span>
<a name="l00045"></a>00045 <span class="comment">         * </span>
<a name="l00046"></a>00046 <span class="comment">         * @param speed - Signed int for the desired speed of the motor. This is a</span>
<a name="l00047"></a>00047 <span class="comment">         * value between 100 and -100.</span>
<a name="l00048"></a>00048 <span class="comment">         */</span>
<a name="l00049"></a>00049         @Override
<a name="l00050"></a><a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#a856c51793b288ba9915c71e6c6999d68">00050</a>         <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#a856c51793b288ba9915c71e6c6999d68">updateLeftFront</a>(<span class="keywordtype">int</span> speed) {
<a name="l00051"></a>00051                 String message = <span class="stringliteral">&quot;!&quot;</span>;
<a name="l00052"></a>00052                 <span class="keywordflow">if</span>(speed &gt;= 0){
<a name="l00053"></a>00053                         <span class="comment">// Check to make sure our speed isn&#39;t more than 100</span>
<a name="l00054"></a>00054                         <span class="keywordflow">if</span> (speed &gt; 100){
<a name="l00055"></a>00055                                 <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#af8e67a4d4db3c5a75756496299dfd7d9">log</a>.warn(<span class="stringliteral">&quot;Front Left Motor wanted a speed greator than 100. Speed was set to 100&quot;</span>);
<a name="l00056"></a>00056                                 speed = 100;
<a name="l00057"></a>00057                         }
<a name="l00058"></a>00058                         message = message + <span class="stringliteral">&quot;M1&quot;</span> + speed + <span class="stringliteral">&quot;\r&quot;</span>;
<a name="l00059"></a>00059                 } <span class="keywordflow">else</span> {
<a name="l00060"></a>00060                         <span class="comment">// Check to make sure our speed is within our range.</span>
<a name="l00061"></a>00061                         <span class="keywordflow">if</span> (speed &lt; -100){
<a name="l00062"></a>00062                                 <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#af8e67a4d4db3c5a75756496299dfd7d9">log</a>.warn(<span class="stringliteral">&quot;Front Left Motor wanted a speed less than -100. Speed was set to -100&quot;</span>);
<a name="l00063"></a>00063                                 speed = -100;
<a name="l00064"></a>00064                         }
<a name="l00065"></a>00065                         speed = Math.abs(speed);
<a name="l00066"></a>00066                         message = message + <span class="stringliteral">&quot;m1&quot;</span> + speed + <span class="stringliteral">&quot;\r&quot;</span>;
<a name="l00067"></a>00067                         <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#af8e67a4d4db3c5a75756496299dfd7d9">log</a>.debug(<span class="stringliteral">&quot;Sending &quot;</span> + message);
<a name="l00068"></a>00068                         <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#aa21ac20410d49cc6785cfb0bb860c56e">_serialConnection</a>.<a class="code" href="classrob_o_s2_1_1serial_1_1_connection.html#aa2a4e0fee121ba69bde8d1b76344b6fc">writeData</a>(message);
<a name="l00069"></a>00069                 }
<a name="l00070"></a>00070         }
<a name="l00071"></a>00071 <span class="comment"></span>
<a name="l00072"></a>00072 <span class="comment">        /**</span>
<a name="l00073"></a>00073 <span class="comment">         * Method to update the speed of the left rear motor ONLY!</span>
<a name="l00074"></a>00074 <span class="comment">         * The synthax of the motor controller is:</span>
<a name="l00075"></a>00075 <span class="comment">         * !M2&lt;speed&gt; for forward speed</span>
<a name="l00076"></a>00076 <span class="comment">         * !m2&lt;speed&gt; for reverse speed</span>
<a name="l00077"></a>00077 <span class="comment">         * </span>
<a name="l00078"></a>00078 <span class="comment">         * @param speed - Signed int for the desired speed of the motor. This is a</span>
<a name="l00079"></a>00079 <span class="comment">         * value between 100 and -100.</span>
<a name="l00080"></a>00080 <span class="comment">         */</span>
<a name="l00081"></a>00081         @Override
<a name="l00082"></a><a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#a09718777847ba02ea1ebedc60b5d4191">00082</a>         <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#a09718777847ba02ea1ebedc60b5d4191">updateLeftRear</a>(<span class="keywordtype">int</span> speed) {
<a name="l00083"></a>00083                 String message = <span class="stringliteral">&quot;!&quot;</span>;
<a name="l00084"></a>00084                 <span class="keywordflow">if</span>(speed &gt;= 0){
<a name="l00085"></a>00085                         <span class="comment">// Check to make sure our speed isn&#39;t more than 100</span>
<a name="l00086"></a>00086                         <span class="keywordflow">if</span> (speed &gt; 100){
<a name="l00087"></a>00087                                 <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#af8e67a4d4db3c5a75756496299dfd7d9">log</a>.warn(<span class="stringliteral">&quot;Left Rear Motor wanted a speed greator than 100. Speed was set to 100&quot;</span>);
<a name="l00088"></a>00088                                 speed = 100;
<a name="l00089"></a>00089                         }
<a name="l00090"></a>00090                         message = message + <span class="stringliteral">&quot;M2&quot;</span> + speed + <span class="stringliteral">&quot;\r&quot;</span>;
<a name="l00091"></a>00091                 } <span class="keywordflow">else</span> {
<a name="l00092"></a>00092                         <span class="comment">// Check to make sure our speed is within our range.</span>
<a name="l00093"></a>00093                         <span class="keywordflow">if</span> (speed &lt; -100){
<a name="l00094"></a>00094                                 <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#af8e67a4d4db3c5a75756496299dfd7d9">log</a>.warn(<span class="stringliteral">&quot;Left Rear Motor wanted a speed less than -100. Speed was set to -100&quot;</span>);
<a name="l00095"></a>00095                                 speed = -100;
<a name="l00096"></a>00096                         }
<a name="l00097"></a>00097                         speed = Math.abs(speed);
<a name="l00098"></a>00098                         message = message + <span class="stringliteral">&quot;m2&quot;</span> + speed + <span class="stringliteral">&quot;\r&quot;</span>;
<a name="l00099"></a>00099                         <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#af8e67a4d4db3c5a75756496299dfd7d9">log</a>.debug(<span class="stringliteral">&quot;Sending &quot;</span> + message);
<a name="l00100"></a>00100                         <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#aa21ac20410d49cc6785cfb0bb860c56e">_serialConnection</a>.<a class="code" href="classrob_o_s2_1_1serial_1_1_connection.html#aa2a4e0fee121ba69bde8d1b76344b6fc">writeData</a>(message);
<a name="l00101"></a>00101                 }       
<a name="l00102"></a>00102         }
<a name="l00103"></a>00103 <span class="comment"></span>
<a name="l00104"></a>00104 <span class="comment">        /**</span>
<a name="l00105"></a>00105 <span class="comment">         * Method to update the speed of the right front motor ONLY!</span>
<a name="l00106"></a>00106 <span class="comment">         * The synthax of the motor controller is:</span>
<a name="l00107"></a>00107 <span class="comment">         * !M3&lt;speed&gt; for forward speed</span>
<a name="l00108"></a>00108 <span class="comment">         * !m3&lt;speed&gt; for reverse speed</span>
<a name="l00109"></a>00109 <span class="comment">         * </span>
<a name="l00110"></a>00110 <span class="comment">         * @param speed - Signed int for the desired speed of the motor. This is a</span>
<a name="l00111"></a>00111 <span class="comment">         * value between 100 and -100.</span>
<a name="l00112"></a>00112 <span class="comment">         */</span>
<a name="l00113"></a>00113         @Override
<a name="l00114"></a><a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#a4e531ebba3367e2c5c5c514348558623">00114</a>         <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#a4e531ebba3367e2c5c5c514348558623">updateRightFront</a>(<span class="keywordtype">int</span> speed) {
<a name="l00115"></a>00115                 String message = <span class="stringliteral">&quot;!&quot;</span>;
<a name="l00116"></a>00116                 <span class="keywordflow">if</span>(speed &gt;= 0){
<a name="l00117"></a>00117                         <span class="comment">// Check to make sure our speed isn&#39;t more than 100</span>
<a name="l00118"></a>00118                         <span class="keywordflow">if</span> (speed &gt; 100){
<a name="l00119"></a>00119                                 <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#af8e67a4d4db3c5a75756496299dfd7d9">log</a>.warn(<span class="stringliteral">&quot;Front Right Motor wanted a speed greator than 100. Speed was set to 100&quot;</span>);
<a name="l00120"></a>00120                                 speed = 100;
<a name="l00121"></a>00121                         }
<a name="l00122"></a>00122                         message = message + <span class="stringliteral">&quot;M3&quot;</span> + speed + <span class="stringliteral">&quot;\r&quot;</span>;
<a name="l00123"></a>00123                 } <span class="keywordflow">else</span> {
<a name="l00124"></a>00124                         <span class="comment">// Check to make sure our speed is within our range.</span>
<a name="l00125"></a>00125                         <span class="keywordflow">if</span> (speed &lt; -100){
<a name="l00126"></a>00126                                 <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#af8e67a4d4db3c5a75756496299dfd7d9">log</a>.warn(<span class="stringliteral">&quot;Front Right Motor wanted a speed less than -100. Speed was set to -100&quot;</span>);
<a name="l00127"></a>00127                                 speed = -100;
<a name="l00128"></a>00128                         }
<a name="l00129"></a>00129                         speed = Math.abs(speed);
<a name="l00130"></a>00130                         message = message + <span class="stringliteral">&quot;m3&quot;</span> + speed + <span class="stringliteral">&quot;\r&quot;</span>;
<a name="l00131"></a>00131                         <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#af8e67a4d4db3c5a75756496299dfd7d9">log</a>.debug(<span class="stringliteral">&quot;Sending &quot;</span> + message);
<a name="l00132"></a>00132                         <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#aa21ac20410d49cc6785cfb0bb860c56e">_serialConnection</a>.<a class="code" href="classrob_o_s2_1_1serial_1_1_connection.html#aa2a4e0fee121ba69bde8d1b76344b6fc">writeData</a>(message);
<a name="l00133"></a>00133                 }
<a name="l00134"></a>00134         }
<a name="l00135"></a>00135 <span class="comment"></span>
<a name="l00136"></a>00136 <span class="comment">        /**</span>
<a name="l00137"></a>00137 <span class="comment">         * Method to update the speed of the right rear motor ONLY!</span>
<a name="l00138"></a>00138 <span class="comment">         * The synthax of the motor controller is:</span>
<a name="l00139"></a>00139 <span class="comment">         * !M4&lt;speed&gt; for forward speed</span>
<a name="l00140"></a>00140 <span class="comment">         * !m4&lt;speed&gt; for reverse speed</span>
<a name="l00141"></a>00141 <span class="comment">         * </span>
<a name="l00142"></a>00142 <span class="comment">         * @param speed - Signed int for the desired speed of the motor. This is a</span>
<a name="l00143"></a>00143 <span class="comment">         * value between 100 and -100.</span>
<a name="l00144"></a>00144 <span class="comment">         */</span>
<a name="l00145"></a>00145         @Override
<a name="l00146"></a><a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#a07f2ac00ceb7c3a049192297d9624d39">00146</a>         <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#a07f2ac00ceb7c3a049192297d9624d39">updateRightRear</a>(<span class="keywordtype">int</span> speed) {
<a name="l00147"></a>00147                 String message = <span class="stringliteral">&quot;!&quot;</span>;
<a name="l00148"></a>00148                 <span class="keywordflow">if</span>(speed &gt;= 0){
<a name="l00149"></a>00149                         <span class="comment">// Check to make sure our speed isn&#39;t more than 100</span>
<a name="l00150"></a>00150                         <span class="keywordflow">if</span> (speed &gt; 100){
<a name="l00151"></a>00151                                 <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#af8e67a4d4db3c5a75756496299dfd7d9">log</a>.warn(<span class="stringliteral">&quot;Right Rear Motor wanted a speed greator than 100. Speed was set to 100&quot;</span>);
<a name="l00152"></a>00152                                 speed = 100;
<a name="l00153"></a>00153                         }
<a name="l00154"></a>00154                         message = message + <span class="stringliteral">&quot;M4&quot;</span> + speed + <span class="stringliteral">&quot;\r&quot;</span>;
<a name="l00155"></a>00155                 } <span class="keywordflow">else</span> {
<a name="l00156"></a>00156                         <span class="comment">// Check to make sure our speed is within our range.</span>
<a name="l00157"></a>00157                         <span class="keywordflow">if</span> (speed &lt; -100){
<a name="l00158"></a>00158                                 <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#af8e67a4d4db3c5a75756496299dfd7d9">log</a>.warn(<span class="stringliteral">&quot;Right Rear Motor wanted a speed less than -100. Speed was set to -100&quot;</span>);
<a name="l00159"></a>00159                                 speed = -100;
<a name="l00160"></a>00160                         }
<a name="l00161"></a>00161                         speed = Math.abs(speed);
<a name="l00162"></a>00162                         message = message + <span class="stringliteral">&quot;m4&quot;</span> + speed + <span class="stringliteral">&quot;\r&quot;</span>;
<a name="l00163"></a>00163                         <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#af8e67a4d4db3c5a75756496299dfd7d9">log</a>.debug(<span class="stringliteral">&quot;Sending &quot;</span> + message);
<a name="l00164"></a>00164                         <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#aa21ac20410d49cc6785cfb0bb860c56e">_serialConnection</a>.<a class="code" href="classrob_o_s2_1_1serial_1_1_connection.html#aa2a4e0fee121ba69bde8d1b76344b6fc">writeData</a>(message);
<a name="l00165"></a>00165                 }
<a name="l00166"></a>00166         }
<a name="l00167"></a>00167 <span class="comment"></span>
<a name="l00168"></a>00168 <span class="comment">        /**</span>
<a name="l00169"></a>00169 <span class="comment">         * Method to update the forward velocity of the platform. This will update</span>
<a name="l00170"></a>00170 <span class="comment">         * the speed of all 4 motors while keeping the rotation velocity set to</span>
<a name="l00171"></a>00171 <span class="comment">         * what it was before this method was called.</span>
<a name="l00172"></a>00172 <span class="comment">         * </span>
<a name="l00173"></a>00173 <span class="comment">         * @param velocity - Forward / Reverse velocity. Pass this in as a signed</span>
<a name="l00174"></a>00174 <span class="comment">         * integer. Units to be determined.</span>
<a name="l00175"></a>00175 <span class="comment">         */</span>
<a name="l00176"></a>00176         @Override
<a name="l00177"></a><a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#a3f984e684040e73552fa339385c99005">00177</a>         <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#a3f984e684040e73552fa339385c99005">setForwardVelocity</a>(<span class="keywordtype">int</span> velocity) {
<a name="l00178"></a>00178                 <span class="comment">// TODO Ask Chris what command I need to send for velocity.</span>
<a name="l00179"></a>00179         }
<a name="l00180"></a>00180 <span class="comment"></span>
<a name="l00181"></a>00181 <span class="comment">        /**</span>
<a name="l00182"></a>00182 <span class="comment">         * Method to update the rotational velocity of the platform. This will update</span>
<a name="l00183"></a>00183 <span class="comment">         * the speed of all 4 motors while keeping the forward velocity set to</span>
<a name="l00184"></a>00184 <span class="comment">         * what it was before this method was called.</span>
<a name="l00185"></a>00185 <span class="comment">         * </span>
<a name="l00186"></a>00186 <span class="comment">         * @param velocity - Left / Right velocity. Pass this in as a signed</span>
<a name="l00187"></a>00187 <span class="comment">         * integer. Units to be determined.</span>
<a name="l00188"></a>00188 <span class="comment">         */</span>
<a name="l00189"></a>00189         @Override
<a name="l00190"></a><a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#a4d2c1782b95262a73c4f20165a366c6e">00190</a>         <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#a4d2c1782b95262a73c4f20165a366c6e">setRotationalVelocity</a>(<span class="keywordtype">int</span> velocity) {
<a name="l00191"></a>00191                 <span class="comment">// TODO Ask Chris what command I need to send for rotational velocity.</span>
<a name="l00192"></a>00192         }
<a name="l00193"></a>00193 <span class="comment"></span>
<a name="l00194"></a>00194 <span class="comment">        /**</span>
<a name="l00195"></a>00195 <span class="comment">         * Sends a text update to the LCD display mounted on the robot. Please</span>
<a name="l00196"></a>00196 <span class="comment">         * refer to the documentation of the platform for the maximum length</span>
<a name="l00197"></a>00197 <span class="comment">         * the string can be, as this driver most likely won&#39;t be the limiting</span>
<a name="l00198"></a>00198 <span class="comment">         * factor.</span>
<a name="l00199"></a>00199 <span class="comment">         * </span>
<a name="l00200"></a>00200 <span class="comment">         * @param update - Text update for the display on the platform</span>
<a name="l00201"></a>00201 <span class="comment">         */</span>
<a name="l00202"></a>00202         @Override
<a name="l00203"></a><a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#a241ca402b048c4d674b1daa159ff2452">00203</a>         <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#a241ca402b048c4d674b1daa159ff2452">updateRobotStatusScreen</a>(String update) {
<a name="l00204"></a>00204                 <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#af8e67a4d4db3c5a75756496299dfd7d9">log</a>.debug(<span class="stringliteral">&quot;Sending: &quot;</span> + <span class="stringliteral">&quot;!@&quot;</span> + update + <span class="stringliteral">&quot;\r&quot;</span>);
<a name="l00205"></a>00205                 <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#aa21ac20410d49cc6785cfb0bb860c56e">_serialConnection</a>.<a class="code" href="classrob_o_s2_1_1serial_1_1_connection.html#aa2a4e0fee121ba69bde8d1b76344b6fc">writeData</a>(<span class="stringliteral">&quot;!@&quot;</span> + update + <span class="stringliteral">&quot;\r&quot;</span>);
<a name="l00206"></a>00206         }
<a name="l00207"></a>00207         <span class="comment"></span>
<a name="l00208"></a>00208 <span class="comment">        /**</span>
<a name="l00209"></a>00209 <span class="comment">         * Not implemented since the remote does not have a display on it</span>
<a name="l00210"></a>00210 <span class="comment">         */</span>
<a name="l00211"></a>00211         @Deprecated
<a name="l00212"></a>00212         @Override
<a name="l00213"></a><a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#aa1f76853ae979f1fe0a9f5305aff261c">00213</a>         <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#aa1f76853ae979f1fe0a9f5305aff261c">updateRemoteStatusScreen</a>(String update) {
<a name="l00214"></a>00214                 <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#af8e67a4d4db3c5a75756496299dfd7d9">log</a>.error(<span class="stringliteral">&quot;This Motor Controller does not support updating the remote from the robot.&quot;</span>);
<a name="l00215"></a>00215         }
<a name="l00216"></a>00216 <span class="comment"></span>
<a name="l00217"></a>00217 <span class="comment">        /**</span>
<a name="l00218"></a>00218 <span class="comment">         * Method to query the count on the left front encoder. If the encoder can</span>
<a name="l00219"></a>00219 <span class="comment">         * not be read this method will return the minimum value for and integer</span>
<a name="l00220"></a>00220 <span class="comment">         * --&gt; Integer.MIN_VALUE</span>
<a name="l00221"></a>00221 <span class="comment">         * </span>
<a name="l00222"></a>00222 <span class="comment">         * @return int - Current encoder count since this was last called</span>
<a name="l00223"></a>00223 <span class="comment">         */</span>
<a name="l00224"></a>00224         @Override
<a name="l00225"></a><a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#adceffdbe553d88fcd36a823c159d5e18">00225</a>         <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#adceffdbe553d88fcd36a823c159d5e18">queryLeftFrontEncoder</a>() {
<a name="l00226"></a>00226                 <span class="keywordflow">return</span> Integer.MIN_VALUE;
<a name="l00227"></a>00227         }
<a name="l00228"></a>00228 <span class="comment"></span>
<a name="l00229"></a>00229 <span class="comment">        /**</span>
<a name="l00230"></a>00230 <span class="comment">         * Method to query the count on the left rear encoder. If the encoder can</span>
<a name="l00231"></a>00231 <span class="comment">         * not be read this method will return the minimum value for and integer</span>
<a name="l00232"></a>00232 <span class="comment">         * --&gt; Integer.MIN_VALUE</span>
<a name="l00233"></a>00233 <span class="comment">         * </span>
<a name="l00234"></a>00234 <span class="comment">         * @return int - Current encoder count since this was last called</span>
<a name="l00235"></a>00235 <span class="comment">         */</span>
<a name="l00236"></a>00236         @Override
<a name="l00237"></a><a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#ad51ea50c3ebd0e6482403f69a05723e5">00237</a>         <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#ad51ea50c3ebd0e6482403f69a05723e5">queryLeftRearEncoder</a>() {
<a name="l00238"></a>00238                 <span class="keywordflow">return</span> Integer.MIN_VALUE;
<a name="l00239"></a>00239         }
<a name="l00240"></a>00240 <span class="comment"></span>
<a name="l00241"></a>00241 <span class="comment">        /**</span>
<a name="l00242"></a>00242 <span class="comment">         * Method to query the count on the right front encoder. If the encoder can</span>
<a name="l00243"></a>00243 <span class="comment">         * not be read this method will return the minimum value for and integer</span>
<a name="l00244"></a>00244 <span class="comment">         * --&gt; Integer.MIN_VALUE</span>
<a name="l00245"></a>00245 <span class="comment">         * </span>
<a name="l00246"></a>00246 <span class="comment">         * @return int - Current encoder count since this was last called</span>
<a name="l00247"></a>00247 <span class="comment">         */</span>
<a name="l00248"></a>00248         @Override
<a name="l00249"></a><a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#a72fad7167d6c070778e07f8796ba0675">00249</a>         <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#a72fad7167d6c070778e07f8796ba0675">queryRightFrontEncoder</a>() {
<a name="l00250"></a>00250                 <span class="keywordflow">return</span> Integer.MIN_VALUE;
<a name="l00251"></a>00251         }
<a name="l00252"></a>00252 <span class="comment"></span>
<a name="l00253"></a>00253 <span class="comment">        /**</span>
<a name="l00254"></a>00254 <span class="comment">         * Method to query the count on the right rear encoder. If the encoder can</span>
<a name="l00255"></a>00255 <span class="comment">         * not be read this method will return the minimum value for and integer</span>
<a name="l00256"></a>00256 <span class="comment">         * --&gt; Integer.MIN_VALUE</span>
<a name="l00257"></a>00257 <span class="comment">         * </span>
<a name="l00258"></a>00258 <span class="comment">         * @return int - Current encoder count since this was last called</span>
<a name="l00259"></a>00259 <span class="comment">         */</span>
<a name="l00260"></a>00260         @Override
<a name="l00261"></a><a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#a9c60bd82bc367a7bd69e78659a1713a8">00261</a>         <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#a9c60bd82bc367a7bd69e78659a1713a8">queryRightRearEncoder</a>() {
<a name="l00262"></a>00262                 <span class="keywordflow">return</span> Integer.MIN_VALUE;
<a name="l00263"></a>00263         }
<a name="l00264"></a>00264         <span class="comment"></span>
<a name="l00265"></a>00265 <span class="comment">        /**</span>
<a name="l00266"></a>00266 <span class="comment">         * Send down a raw command to the motor controller. This may be useful</span>
<a name="l00267"></a>00267 <span class="comment">         * for temporary debug functions that do not warrant a full method in</span>
<a name="l00268"></a>00268 <span class="comment">         * this driver class.</span>
<a name="l00269"></a>00269 <span class="comment">         * </span>
<a name="l00270"></a>00270 <span class="comment">         * This command is not null-terminated by this driver!</span>
<a name="l00271"></a>00271 <span class="comment">         * </span>
<a name="l00272"></a>00272 <span class="comment">         * @param command - Raw command for the platform</span>
<a name="l00273"></a>00273 <span class="comment">         */</span>
<a name="l00274"></a><a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#a4c13ad8f98f44e253d3706ccf135f19d">00274</a>         <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#a4c13ad8f98f44e253d3706ccf135f19d">sendCommand</a>(String command){
<a name="l00275"></a>00275                 <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#aa21ac20410d49cc6785cfb0bb860c56e">_serialConnection</a>.<a class="code" href="classrob_o_s2_1_1serial_1_1_connection.html#aa2a4e0fee121ba69bde8d1b76344b6fc">writeData</a>(command);
<a name="l00276"></a>00276         }
<a name="l00277"></a>00277         <span class="comment"></span>
<a name="l00278"></a>00278 <span class="comment">        /**</span>
<a name="l00279"></a>00279 <span class="comment">         * Returns the sensor listener thats monitoring replies from the motor</span>
<a name="l00280"></a>00280 <span class="comment">         * controller.</span>
<a name="l00281"></a>00281 <span class="comment">         * </span>
<a name="l00282"></a>00282 <span class="comment">         * @return</span>
<a name="l00283"></a>00283 <span class="comment">         */</span>
<a name="l00284"></a><a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#acb575fdaa57745d0de0567674f0e42f2">00284</a>         <span class="keyword">public</span> <a class="code" href="interfacerob_o_s2_1_1hardware_1_1interfaces_1_1listeners_1_1_i_four_motor_listener.html">IFourMotorListener</a> <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#acb575fdaa57745d0de0567674f0e42f2">getListener</a>(){
<a name="l00285"></a>00285                 <span class="keywordflow">return</span> <a class="code" href="classrob_o_s2_1_1hardware_1_1ubr_1_1_u_b_r_motor_controller.html#ae5120436c87a1e689b05f72232e59714">_listener</a>;
<a name="l00286"></a>00286         }
<a name="l00287"></a>00287 
<a name="l00288"></a>00288 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="_u_b_r_motor_controller_8java.html">UBRMotorController.java</a>      </li>
      <li class="footer">Generated on Tue Jul 26 2011 for RobOS2 by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.4 </li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>


</body>
</html>
